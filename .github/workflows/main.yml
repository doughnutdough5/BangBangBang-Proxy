name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t doughnutdough5/bangbangbang-proxy:latest .
          docker push doughnutdough5/bangbangbang-proxy:latest

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        id: deploy-server
        if: contains(github.ref, 'main')
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            if [ $(sudo docker ps -aq -f name=${{ secrets.CONTAINER_NAME }}) ]; then
              echo "Stopping and removing existing container: ${{ secrets.CONTAINER_NAME }}"
              sudo docker stop ${{ secrets.CONTAINER_NAME }}
              sudo docker rm ${{ secrets.CONTAINER_NAME }}
            fi

            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/bangbangbang-proxy
            sudo docker run -d --env-file ${{ secrets.ENV_PATH }} --name ${{ secrets.CONTAINER_NAME }} -p ${{ secrets.IN_PORT }}:${{ secrets.OUT_PORT }} ${{ secrets.DOCKER_USERNAME }}/bangbangbang-proxy
            sudo docker image prune -f
            sudo docker container prune -f
